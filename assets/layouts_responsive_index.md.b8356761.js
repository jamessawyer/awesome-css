import{_ as e,c as i,o,N as l}from"./chunks/framework.a06ae383.js";const h=JSON.parse('{"title":"响应式布局","description":"","frontmatter":{"title":"响应式布局"},"headers":[],"relativePath":"layouts/responsive/index.md","lastUpdated":1681286049000}'),t={name:"layouts/responsive/index.md"},r=l('<h2 id="教程" tabindex="-1">教程 <a class="header-anchor" href="#教程" aria-label="Permalink to &quot;教程&quot;">​</a></h2><ol><li><p><a href="https://css-tricks.com/beyond-media-queries-using-newer-html-css-features-for-responsive-designs/" target="_blank" rel="noreferrer">Beyond Media Queries: Using Newer HTML &amp; CSS Features for Responsive Designs - @css-tricks.com </a>介绍媒体查询之外的几种响应式布局方式</p><ul><li><p>响应式图片，使用 <code>&lt;picture&gt; + &lt;source media=&quot;(max-width:1000px)&quot; srcset=&quot;picture-lg.png&quot;&gt;</code> 元素进行媒体查询</p></li><li><p><a href="https://responsivebreakpoints.com/" target="_blank" rel="noreferrer">🛠️ Responsive Images Generator</a> 可使用这个自动生成媒体查询图片</p></li><li><p>响应式图片根据dpi进行设置， <code>&lt;img srcset=&quot;flower3x 3x, flower2x 2x&quot; /&gt;</code></p></li><li><p>图片使用 <a href="https://css-tricks.com/almanac/properties/o/object-fit/" target="_blank" rel="noreferrer">object-fit</a> 和 <a href="https://css-tricks.com/almanac/properties/o/object-position/" target="_blank" rel="noreferrer">object-position</a> 适配，以及图片位置调整</p></li><li><p>⚡<code>min()</code> &amp; <code>max()</code> &amp; <code>clamp()</code> CSS工具方法</p></li><li><p><code>px, em, rem, %, vw, vh</code> 单位的灵活使用</p></li></ul></li><li><p><a href="https://ishadeed.com/article/responsive-design/#responsive-design-in-2023-and-beyond" target="_blank" rel="noreferrer">🚀The Guide To Responsive Design In 2023 and Beyond - @ishadeed.com</a></p><ul><li>如何使用更现代的CSS工具和方法去完成响应式布局，尽可能少的使用媒体查询的方式</li><li>响应式所包含的内容 <ul><li>响应内容</li><li>响应视窗</li><li>响应容器</li><li>响应用户偏好，比如暗黑模式等</li></ul></li><li>流式响应式布局的需要考虑的点 <ul><li>Container Query</li><li>Wrapping，比如 <code>flex-wrap</code></li><li>Element Sizing</li><li>Font Sizes</li><li>Spacing</li></ul></li><li>flexbox, grid, <code>clamp()</code> &amp; <code>min()</code> &amp; <code>max()</code>的使用</li></ul></li><li><p><a href="https://ishadeed.com/article/css-min-max-clamp/" target="_blank" rel="noreferrer">min(), max(), and clamp() CSS Functions - @ishadeed.com</a></p><ul><li>介绍3个工具函数的含义，以及实际应用场景实例🌰</li><li><code>min(30%, 100px)</code>: 不超过 <code>100px</code></li><li><code>max(30%, 100px)</code>: 不小于 <code>100px</code></li><li><code>clamp(12px, 5vw, 24px)</code>: 限定于 <code>12px - 20px</code> 之间，偏好值是 <code>5vw</code></li><li>这3个工具函数对于新式响应式布局很重要</li></ul></li></ol><p>2023年04月12日15:27:43</p>',3),a=[r];function s(c,n,p,d,m,u){return o(),i("div",null,a)}const x=e(t,[["render",s]]);export{h as __pageData,x as default};
